import java.util.*;
public class Ishu {
    public static class Node{
        int data;
        Node left;
        Node right;
        public Node(int data){
            this.data=data;
            this.left=null;
            this.right=null;
        }
    }
    public static class Binarytree{
        static int idx=-1;
        public static Node buildtree(int nodes[]){
            idx++;

            if(nodes[idx]==-1){
                return null;
            }
            Node newnode=new Node(nodes[idx]);
            newnode.left=buildtree(nodes);// run untill null is coming
            newnode.right=buildtree(nodes);// after left null then right run until null is comin
            return newnode;
        }
        public static int height(Node root){
            if(root==null){
                return 0;
            }
            int leftheight=height(root.left);
            int rigthheight=height(root.right);
           return   Math.max(leftheight,rigthheight)+1;
        }
        public static int count(Node root){
            if(root==null){
                return  0;
            }
            int leftc=count(root.left);
            int rightc=count(root.right);
            return leftc+rightc+1 ;
        }

    }

    public static void main(String[] args) {
        int nodes[]={1,2,4,-1,-1,5,-1,-1,3,-1,6,-1,-1};
        Binarytree tree=new Binarytree();

        Node root=tree.buildtree(nodes);
      //  tree.levelorder(root);
        System.out.println(tree.height(root));
        System.out.println(tree.count(root));
    }
}